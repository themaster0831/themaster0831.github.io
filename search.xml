<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/03/26/week2%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/03/26/week2%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="week2笔记"><a href="#week2笔记" class="headerlink" title="week2笔记"></a>week2笔记</h3><hr><h4 id="一、Markdown语法"><a href="#一、Markdown语法" class="headerlink" title="一、Markdown语法"></a>一、Markdown语法</h4><h5 id="1-标题语法"><a href="#1-标题语法" class="headerlink" title="1.标题语法"></a>1.标题语法</h5><p>使用#号来设置想要的标题格式，#号的数量对应着标题的级别，考虑到不同的Markdown应用程序的兼容性，最好是在#号和文字间加上一个空格。以四级标题为例：<code>#### TITEL 4</code></p><p>特别的，一二级标题还可以使用“标题 + 另起一行添加任意数量的 &#x3D; &#x3D; 或 - - ”的格式来设置。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一级标题设置如下：</span><br><span class="line">Titel 1</span><br><span class="line">=====</span><br><span class="line">二级标题设置如下：</span><br><span class="line">Titel 2</span><br><span class="line">--------</span><br></pre></td></tr></table></figure><p>PS：在Typora中，可以使用快捷键<code>CTRL + N</code>来设置N级标题。</p><h5 id="2-段落语法"><a href="#2-段落语法" class="headerlink" title="2.段落语法"></a>2.段落语法</h5><p>要创建段落，只需用空白行将一行或多行文本分割开来即可。不建议用空格（spaces）或制表符(tabs)来缩进段落。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is the first paragraphy</span><br><span class="line"></span><br><span class="line">This is the second paragraphy</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h5 id="3-换行语法"><a href="#3-换行语法" class="headerlink" title="3.换行语法"></a>3.换行语法</h5><p> 在一行的末尾添加两个或以上的空格，然后按回车即可创建一个换行（<br>）</p><h5 id="4-强调语法"><a href="#4-强调语法" class="headerlink" title="4.强调语法"></a>4.强调语法</h5><h6 id="粗体（Bold）"><a href="#粗体（Bold）" class="headerlink" title="粗体（Bold）"></a>粗体（Bold）</h6><p>在文本前后各添加两个星号（*）或下划线（_），来对文本进行加粗处理。如要要对文本内的某一部分、某一单词进行加粗，在对应位置的前后各添加两个星号即可。  </p><h6 id="斜体（Italic）"><a href="#斜体（Italic）" class="headerlink" title="斜体（Italic）"></a>斜体（Italic）</h6><p>在文本前后各添加一个星号（*）或下划线（_），来对文本进行斜体处理。如要要对文本内的某一部分、某一单词进行加粗，在对应位置的前后各添加一个星号即可。  </p><p>如果要同时用粗体和斜体来突出显示文本，只需在文本前后各添加三个星号（*）或下划线（_）。PS：星号和下划线可以混合使用，但一定要前后对应。</p><h5 id="5-引用语法"><a href="#5-引用语法" class="headerlink" title="5.引用语法"></a>5.引用语法</h5><p>在段落前添加一个<code>&gt;</code>可创建块引用。块引用可包含多个段落，但需要在段落间的空白行添加一个<code>&gt;</code>符号。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;The first line</span><br><span class="line">&gt;</span><br><span class="line">&gt;The second line</span><br></pre></td></tr></table></figure><p>块引用也可以多层嵌套使用，递归的使用<code>&gt;</code>就行。</p><h5 id="6-列表语法"><a href="#6-列表语法" class="headerlink" title="6.列表语法"></a>6.列表语法</h5><h6 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h6><p>在每个列表项前面添加数字并紧跟一个英文句点，即可创建有序列表。数字可以随意设置，系统会自动将其调整为有序数字 ，但应当以数字1起始。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.1.</span><br><span class="line">2.-&gt;2.</span><br><span class="line">3.3.</span><br><span class="line"></span><br><span class="line">1.1.</span><br><span class="line">1.-&gt;2.</span><br><span class="line">1.3.</span><br><span class="line"></span><br><span class="line">1.1.</span><br><span class="line">8.-&gt;2.</span><br><span class="line">3.3.</span><br></pre></td></tr></table></figure><h6 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h6><p>用破折号（-）、星号（*）或加号（+）替换数字（这时候就不用添加英文句点了），就可以创建无序列表。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- First item</span><br><span class="line">- Second item</span><br><span class="line">- Third item</span><br><span class="line"></span><br><span class="line">* First item· First item</span><br><span class="line">* Second item-&gt;· Second item</span><br><span class="line">* Third item· Third item</span><br><span class="line"></span><br><span class="line">+ First item</span><br><span class="line">+ Second item</span><br><span class="line">+ Third item</span><br><span class="line">（三者等效）</span><br></pre></td></tr></table></figure><p>列表可嵌套使用，无论是嵌套列表，还是嵌套段落、引用块、代码块甚至是图片，都可以。需要先添加缩进，再使用相应的的语法进行嵌套。</p><h5 id="7-代码语法"><a href="#7-代码语法" class="headerlink" title="7.代码语法"></a>7.代码语法</h5><p>用反引号（&#96;）包裹相应内容，可将其用代码显示。如果要表示为代码的单词或短语中包含一个或多个反引号，可用双反引号(&#96;&#96;)包裹文本内容来实现。</p><p>（与Python中单引号双引号的使用一样）</p><h5 id="8-分割线语法"><a href="#8-分割线语法" class="headerlink" title="8.分割线语法"></a>8.分割线语法</h5><p>在一行中使用三个或多个星号（***）、破折号（—）或下划线（___）来创建分隔线，在分割线前后需要添加空白行。</p><h5 id="9-链接语法"><a href="#9-链接语法" class="headerlink" title="9.链接语法"></a>9.链接语法</h5><h6 id="基本语法："><a href="#基本语法：" class="headerlink" title="基本语法："></a>基本语法：</h6><p>链接文本放在中括号中，链接地址放在圆括号内，链接titele可选（链接title是当鼠标悬停在链接上时会出现的文字。）。基本语法为：<code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></p><h6 id="网址和Email地址"><a href="#网址和Email地址" class="headerlink" title="网址和Email地址"></a>网址和Email地址</h6><p>使用尖括号可以将URL或Email地址变为可点击的地址。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;https://markdown.com.cn&gt;</span><br><span class="line">&lt;2167667190@qq.com&gt;</span><br></pre></td></tr></table></figure><h6 id="引用类型链接"><a href="#引用类型链接" class="headerlink" title="引用类型链接"></a>引用类型链接</h6><ul><li><p>第一部分：</p><p>第一部分使用两组括号进行格式设置。第一组括号包围应显示为链接的文本。第二组括号显示一个标签，该标签用于指向存储在文档其他位置的链接。（第二组括号中的标签不区分大小写，可包含字母、数字、空格或标点符号）。</p><ul><li><code>[hobbit-hole][1]</code></li></ul></li><li><p>第二部分：</p><p>引用类型链接的第二部分使用以下属性设置格式：</p><ol><li>放在括号中的标签，其后紧跟一个冒号和至少一个空格。（这个是第一部分正确匹配第二部分的依据。）</li><li>连接的URL，可以选择将其放在尖括号中。</li><li>链接的可选标题，可将其放在双引号、单引号或括号中。<ul><li><code>[1]: https://markdown.com.cn &quot;官网哦~&quot;</code>  </li><li>第二部分可出现在Markdown文档的任何位置。</li><li>不同的Markdown应用程序处理URL中间的空格的方式不一样，为了兼容，尽量使用%20代替空格。例如：<code>[1]: (https://www.example.com/my%20great%20page)</code></li></ul></li></ol></li></ul><h5 id="10-图片语法"><a href="#10-图片语法" class="headerlink" title="10.图片语法"></a>10.图片语法</h5><p>要在文档中添加图片，可使用感叹号（!），然后在方括号增加替代文本，在圆括号中放置图片的链接，其后可增加一个可选的图片标题文本。</p><p>语法代码为：<code>![图片alt](图片链接 &quot;图片title&quot;)</code></p><p>如果要给图片添加连接，可用方括号包裹图片的整个Markdown语法，然后在其后添加对应的链接。</p><p>语法为：<code>[![图片alt](图片链接 &quot;图片title&quot;)](链接URL)</code></p><h4 id="二、解题"><a href="#二、解题" class="headerlink" title="二、解题"></a>二、解题</h4><h5 id="1-test-your-nc"><a href="#1-test-your-nc" class="headerlink" title="1&gt;test_your_nc"></a>1&gt;test_your_nc</h5><ol><li><p>下载文件，放进虚拟机中查看保护开启情况</p><p><img src="/../AppData/Roaming/Typora/typora-user-images/image-20250325154731127.png" alt="image-20250325154731127"></p></li></ol><p>看到，该文件为64位小端序。</p><ol start="2"><li>用64位IDA打开目标文件，</li></ol><p>![](D:&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2025-03-25 154014.png)</p><p>看到主函数中直接就是“system(“&#x2F;bin&#x2F;sh”);”函数，因此直接nc靶机即可。</p><ol start="3"><li><p>申请靶机</p></li><li><p>nc靶机</p><p>![](D:&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2025-03-25 154124.png)</p><p>看到flag文件</p><ol start="5"><li><p>cat flag文件</p><p>![](D:&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2025-03-25 154137.png)</p></li></ol></li></ol><h5 id="２＞Does-your-nc-work？"><a href="#２＞Does-your-nc-work？" class="headerlink" title="２＞Does your nc work？"></a>２＞Does your nc work？</h5><ol><li><p>题目并没有给附件，而题目又是“Does your nc work?”，那就直接申请靶机，然后在虚拟机中nc。</p></li><li><p>就正常进行 ls cd cat 操作找flag文件就好了。</p><p>前几项文件名是系统文件名，不太可能会存放flag文件，所以就在后两个文件nss和pwn中慢慢找。![](D:&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2025-03-25 162957.png)</p></li></ol><hr><p>![](<a href="https://tuchuang.themaster.fun/picture/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2025-03-25">https://tuchuang.themaster.fun/picture/屏幕截图2025-03-25</a> 154137.png)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pwn环境搭建</title>
      <link href="/2024/11/18/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/11/18/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/j284886202/article/details/134931709">本文参考</a>：<a href="https://blog.csdn.net/j284886202/article/details/134931709">★pwn 22.04环境搭建保姆级教程★_pwn环境搭建-CSDN博客</a></p><hr><h4 id="一、系统环境"><a href="#一、系统环境" class="headerlink" title="一、系统环境"></a>一、系统环境</h4><h5 id="1-VM虚拟机"><a href="#1-VM虚拟机" class="headerlink" title="1.VM虚拟机"></a>1.VM虚拟机</h5><p>​我去VM官网看了看，emmm，看了半天愣是没看出来该怎么下载。。。</p><p>对于VMware这个软件的安装直接参考这篇文章吧，<a href="https://blog.csdn.net/weixin_52799373/article/details/124324077?ops_request_misc=%257B%2522request%255Fid%2522%253A%25224EFDDA87-6EB8-4C1C-88AC-39D930DEF2CD%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=4EFDDA87-6EB8-4C1C-88AC-39D930DEF2CD&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124324077-null-null.142%5Ev100%5Epc_search_result_base5&utm_term=vmware%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B&spm=1018.2226.3001.4187">VMware虚拟机安装Linux教程(超详细)</a></p><h5 id="2-配置Ubuntu映像"><a href="#2-配置Ubuntu映像" class="headerlink" title="2.配置Ubuntu映像"></a>2.配置Ubuntu映像</h5><h6 id="2-1-Ubuntu官网"><a href="#2-1-Ubuntu官网" class="headerlink" title="2.1 Ubuntu官网"></a>2.1 Ubuntu官网</h6><p>​<a href="https://ubuntu.com/download/desktop">Ubuntu</a></p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 170343.png)</p><p>选择一个你想要的版本，直接下载。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 171013.png)</p><p>然后会自动跳转到这个界面，如果没有下载，点击“download now”，下载。</p><h6 id="2-2-创建虚拟机"><a href="#2-2-创建虚拟机" class="headerlink" title="2.2 创建虚拟机"></a>2.2 创建虚拟机</h6><p>​点击 + 号创建新的虚拟机</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 171512.png)</p><p>选择自定义，下一步。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 171722.png)</p><p>选择下载好的映像文件，下一步。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 171755.png)</p><p>设置用户名和密码。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 171838.png)</p><p>​选择安装位置</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 171915.png)</p><p>处理器，按照默认的来就行</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 171938.png)</p><p>默认即可</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 171946.png)</p><p>网络使用NAT地址</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 172112.png)</p><p>按照推荐的就行</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 014132.png)</p><p>固态硬盘选择NVMe，机械硬盘选择SATA</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 014141.png)</p><p>注：可按照以下步骤查看个人电脑硬盘类型</p><p>1.以管理员身份运行命令提示符</p><p><img src="C:/Users/Lenovo/AppData/Roaming/Typora/typora-user-images/image-20241125010004181.png" alt="image-20241125010004181"></p><ol start="2"><li><p>依次输入下图中的四条命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk</span><br><span class="line">select disk 0  //数字是想查看的硬盘的编号</span><br><span class="line">detail disk</span><br></pre></td></tr></table></figure></li></ol><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 172349.png)</p><p>创建新磁盘</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 172442.png)</p><p>最大磁盘大小尽可能选大一些（那位师傅说如果选的太小了，以后扩容会很麻烦，而且这只是预留空间大小，并不是一下子就分出这么多空间给虚拟机，而是随着你添加的文件的增多而变大的）</p><p>存储为单个或多个文件都可以，单个文件更好管理一些（个人感觉）</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 172450.png)</p><p>下一步</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 172512.png)</p><p>取消勾选“创建后开启此虚拟机”，点击完成</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 172518.png)</p><p>编辑设置</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 172543.png)</p><p>将 软盘 和 带数字的CD移除</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 172738.png)</p><p>然后在不带数字的CD里面配置安装好的Ubuntu映像文件</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 173935.png)</p><p>开启虚拟机，出现以下内容，按Enter进入</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 173959.png)</p><p>选择 Install Ubuntu</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 174106.png)</p><p>语言都选择“Englishi（US）”，然后一路无脑按continue</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 174118.png)</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 174131.png)</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 174232.png)</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 174240.png)</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 174308.png)</p><p>设置一下用户名和登录密码，继续continue</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 174324.png)</p><p>输入刚才设置的登录密码</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 175521.png)</p><p>点击右上角skip</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 175605.png)</p><p>会弹出一个下图这样的小窗口，点击“Install now”</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-18 180020.png)</p><p>关机后，来到设置里面，在CD&#x2F;DVD 里面改为使用物理引擎（我这里不知道为什么是灰色的，点击不了，可能是因为我第一个虚拟机设置过使用物理引擎了。。。）</p><p>点击确定</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 013528.png)</p><p>重新启动，会弹出如下内容，直接点击否就行（因为我上一步没能设置，所以重启并不会有弹窗，就直接借用了另一位师傅的图片）</p><p><img src="C:/Users/Lenovo/Desktop/3b66d19edf7e5400b99d448fb739b3e7.png"></p><p>拍摄一下快照保存一下状态，防止以后系统崩溃，导致现在的努力付诸东流。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 015024.png)</p><p>至此，Ubuntu操作系统安装完成！！！</p><h4 id="二、PWN工具安装"><a href="#二、PWN工具安装" class="headerlink" title="二、PWN工具安装"></a>二、PWN工具安装</h4><h5 id="右击桌面，打开terminal"><a href="#右击桌面，打开terminal" class="headerlink" title="右击桌面，打开terminal"></a>右击桌面，打开terminal</h5><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 015716.png)</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install pipx</span><br><span class="line">pipx ensurepath</span><br></pre></td></tr></table></figure><p>(按照那位师傅的说法，在Ubuntu23.以上的版本可能会出现pip（externally-managed-environment）错误，因为Ubuntu23.使用Python包来实现增强功能，以避免包管理工具之间的冲突)</p><h5 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install vim</span><br></pre></td></tr></table></figure><h5 id="gcc"><a href="#gcc" class="headerlink" title="gcc"></a>gcc</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install gcc</span><br></pre></td></tr></table></figure><h5 id="python3-pipx"><a href="#python3-pipx" class="headerlink" title="python3-pipx"></a>python3-pipx</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-pipx</span><br></pre></td></tr></table></figure><h5 id="pwntools"><a href="#pwntools" class="headerlink" title="pwntools"></a>pwntools</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pipx install pwntools</span><br></pre></td></tr></table></figure><h5 id="checksec"><a href="#checksec" class="headerlink" title="checksec"></a>checksec</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install checksec</span><br></pre></td></tr></table></figure><h5 id="git"><a href="#git" class="headerlink" title="git"></a>git</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure><h5 id="pwndbg"><a href="#pwndbg" class="headerlink" title="pwndbg"></a>pwndbg</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/</span><br><span class="line">git clone https://github.com/pwndbg/pwndbg</span><br><span class="line">cd ~/pwndbg</span><br><span class="line">./setup.sh</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><h5 id="ipython"><a href="#ipython" class="headerlink" title="ipython"></a>ipython</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pipx install ipython</span><br></pre></td></tr></table></figure><h5 id="LibcSearcher"><a href="#LibcSearcher" class="headerlink" title="LibcSearcher"></a>LibcSearcher</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/</span><br><span class="line">git clone https://github.com/lieanu/LibcSearcher.git</span><br><span class="line">cd LibcSearcher</span><br><span class="line">sudo python3 setup.py develop</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><h5 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pip install capstone</span><br><span class="line">sudo pip install ropgadget</span><br></pre></td></tr></table></figure><h5 id="ropper"><a href="#ropper" class="headerlink" title="ropper"></a>ropper</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pipx install ropper</span><br></pre></td></tr></table></figure><h5 id="one-gadget"><a href="#one-gadget" class="headerlink" title="one_gadget"></a>one_gadget</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install ruby</span><br><span class="line">sudo apt install ruby-dev</span><br><span class="line">sudo gem install one_gadget</span><br></pre></td></tr></table></figure><h5 id="seccomp-tools"><a href="#seccomp-tools" class="headerlink" title="seccomp-tools"></a>seccomp-tools</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gem install seccomp-tools</span><br></pre></td></tr></table></figure><h5 id="glibc-all-in-one"><a href="#glibc-all-in-one" class="headerlink" title="glibc-all-in-one"></a>glibc-all-in-one</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/</span><br><span class="line">git clone https://github.com/matrix1001/glibc-all-in-one</span><br><span class="line">cd ~/glibc-all-in-one</span><br><span class="line">sudo python3 update_list</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><h5 id="patchelf"><a href="#patchelf" class="headerlink" title="patchelf"></a>patchelf</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install patchelf</span><br></pre></td></tr></table></figure><h5 id="clibc"><a href="#clibc" class="headerlink" title="clibc"></a>clibc</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/</span><br><span class="line">git clone https://github.com/dsyzy/free-libc</span><br><span class="line">cd ~/free-libc</span><br><span class="line">sudo sh ./install.sh</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>工具安装结束，保存一个快照。</p><h4 id="三、Linux系统美化"><a href="#三、Linux系统美化" class="headerlink" title="三、Linux系统美化"></a>三、Linux系统美化</h4><h5 id="3-1-VIM"><a href="#3-1-VIM" class="headerlink" title="3.1 VIM"></a>3.1 VIM</h5><p>进入vimrc</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.vimrc</span><br></pre></td></tr></table></figure><p>将以下代码复制粘贴进去（）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">syntax on &quot;自动语法高亮</span><br><span class="line">winpos 5 5          &quot; 设定窗口位置 </span><br><span class="line">set lines=40 columns=155    &quot; 设定窗口大小 </span><br><span class="line">set nu              &quot; 显示行号 </span><br><span class="line">&quot;set go=             &quot; 不要图形按钮 </span><br><span class="line">&quot;color asmanian2     &quot; 设置背景主题 </span><br><span class="line">set guifont=Courier_New:h10:cANSI   &quot; 设置字体 </span><br><span class="line">&quot;syntax on           &quot; 语法高亮 </span><br><span class="line">autocmd InsertLeave * se nocul  &quot; 用浅色高亮当前行 </span><br><span class="line">autocmd InsertEnter * se cul    &quot; 用浅色高亮当前行 </span><br><span class="line">set ruler           &quot; 显示标尺 </span><br><span class="line">set showcmd         &quot; 输入的命令显示出来，看的清楚些 </span><br><span class="line">&quot;set cmdheight=1     &quot; 命令行（在状态行下）的高度，设置为1 </span><br><span class="line">&quot;set whichwrap+=&lt;,&gt;,h,l   &quot; 允许backspace和光标键跨越行边界(不建议) </span><br><span class="line">&quot;set scrolloff=3     &quot; 光标移动到buffer的顶部和底部时保持3行距离 </span><br><span class="line">set novisualbell    &quot; 不要闪烁(不明白) </span><br><span class="line">set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;   &quot;状态行显示的内容 </span><br><span class="line">set laststatus=1    &quot; 启动显示状态行(1),总是显示状态行(2) </span><br><span class="line">set foldenable      &quot; 允许折叠 </span><br><span class="line">set foldmethod=manual   &quot; 手动折叠 </span><br><span class="line">&quot;set background=dark &quot;背景使用黑色</span><br><span class="line">set nocompatible  &quot;去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限 </span><br><span class="line"></span><br><span class="line">&quot; 显示中文帮助</span><br><span class="line">if version &gt;= 603</span><br><span class="line">    set helplang=cn</span><br><span class="line">    set encoding=utf-8</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; 设置配色方案</span><br><span class="line">&quot;colorscheme murphy</span><br><span class="line"></span><br><span class="line">&quot;字体</span><br><span class="line">&quot;if (has(&quot;gui_running&quot;))</span><br><span class="line">&quot;   set guifont=Bitstream\ Vera\ Sans\ Mono\ 10</span><br><span class="line">&quot;endif</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot;&quot;&quot;&quot;&quot;新文件标题&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot;新建.c,.h,.sh,.java文件，自动插入文件头 </span><br><span class="line">autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec &quot;:call SetTitle()&quot; </span><br><span class="line"></span><br><span class="line">&quot;&quot;定义函数SetTitle，自动插入文件头 </span><br><span class="line">func SetTitle() </span><br><span class="line">    &quot;如果文件类型为.sh文件 </span><br><span class="line">    if &amp;filetype == &#x27;sh&#x27; </span><br><span class="line">        call setline(1,&quot;\#########################################################################&quot;) </span><br><span class="line">        call append(line(&quot;.&quot;), &quot;\# File Name: &quot;.expand(&quot;%&quot;)) </span><br><span class="line">        call append(line(&quot;.&quot;)+1, &quot;\# Author: zll&quot;) </span><br><span class="line">        call append(line(&quot;.&quot;)+2, &quot;\# mail: zhnlion@126.com&quot;) </span><br><span class="line">        call append(line(&quot;.&quot;)+3, &quot;\# Created Time: &quot;.strftime(&quot;%c&quot;)) </span><br><span class="line">        call append(line(&quot;.&quot;)+4, &quot;\#########################################################################&quot;) </span><br><span class="line">        call append(line(&quot;.&quot;)+5, &quot;\#!/bin/bash&quot;) </span><br><span class="line">        call append(line(&quot;.&quot;)+6, &quot;&quot;) </span><br><span class="line">    else </span><br><span class="line">        call setline(1, &quot;/*************************************************************************&quot;) </span><br><span class="line">        call append(line(&quot;.&quot;), &quot;    &gt; File Name: &quot;.expand(&quot;%&quot;)) </span><br><span class="line">        call append(line(&quot;.&quot;)+1, &quot;    &gt; Author: zll&quot;) </span><br><span class="line">        call append(line(&quot;.&quot;)+2, &quot;    &gt; Mail: zhnllion@126.com &quot;) </span><br><span class="line">        call append(line(&quot;.&quot;)+3, &quot;    &gt; Created Time: &quot;.strftime(&quot;%c&quot;)) </span><br><span class="line">        call append(line(&quot;.&quot;)+4, &quot; ************************************************************************/&quot;) </span><br><span class="line">        call append(line(&quot;.&quot;)+5, &quot;&quot;)</span><br><span class="line">    endif</span><br><span class="line">    if &amp;filetype == &#x27;cpp&#x27;</span><br><span class="line">        call append(line(&quot;.&quot;)+6, &quot;#include&lt;iostream&gt;&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+7, &quot;using namespace std;&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+8, &quot;&quot;)</span><br><span class="line">    endif</span><br><span class="line">    if &amp;filetype == &#x27;c&#x27;</span><br><span class="line">        call append(line(&quot;.&quot;)+6, &quot;#include&lt;stdio.h&gt;&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+7, &quot;&quot;)</span><br><span class="line">    endif</span><br><span class="line"></span><br><span class="line">    &quot;新建文件后，自动定位到文件末尾</span><br><span class="line">    autocmd BufNewFile * normal G</span><br><span class="line">endfunc </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot;键盘命令</span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">nmap &lt;leader&gt;w :w!&lt;cr&gt;</span><br><span class="line">nmap &lt;leader&gt;f :find&lt;cr&gt;</span><br><span class="line"></span><br><span class="line">&quot; 映射全选+复制 ctrl+a</span><br><span class="line">map &lt;C-A&gt; ggVGY</span><br><span class="line">map! &lt;C-A&gt; &lt;Esc&gt;ggVGY</span><br><span class="line">map &lt;F12&gt; gg=G</span><br><span class="line"></span><br><span class="line">&quot; 选中状态下 Ctrl+c 复制</span><br><span class="line">vmap &lt;C-c&gt; &quot;+y</span><br><span class="line"></span><br><span class="line">&quot;去空行  </span><br><span class="line">nnoremap &lt;F2&gt; :g/^\s*$/d&lt;CR&gt; </span><br><span class="line"></span><br><span class="line">&quot;比较文件  </span><br><span class="line">nnoremap &lt;C-F2&gt; :vert diffsplit </span><br><span class="line"></span><br><span class="line">&quot;新建标签  </span><br><span class="line">map &lt;M-F2&gt; :tabnew&lt;CR&gt;  </span><br><span class="line"></span><br><span class="line">&quot;列出当前目录文件  </span><br><span class="line">map &lt;F3&gt; :tabnew .&lt;CR&gt;  </span><br><span class="line"></span><br><span class="line">&quot;打开树状文件目录  </span><br><span class="line">map &lt;C-F3&gt; \be  </span><br><span class="line"></span><br><span class="line">&quot;C，C++ 按F5编译运行</span><br><span class="line">map &lt;F5&gt; :call CompileRunGcc()&lt;CR&gt;</span><br><span class="line">func! CompileRunGcc()</span><br><span class="line">    exec &quot;w&quot;</span><br><span class="line">    if &amp;filetype == &#x27;c&#x27;</span><br><span class="line">        exec &quot;!g++ % -o %&lt;&quot;</span><br><span class="line">        exec &quot;! ./%&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &#x27;cpp&#x27;</span><br><span class="line">        exec &quot;!g++ % -o %&lt;&quot;</span><br><span class="line">        exec &quot;! ./%&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &#x27;java&#x27; </span><br><span class="line">        exec &quot;!javac %&quot; </span><br><span class="line">        exec &quot;!java %&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &#x27;sh&#x27;</span><br><span class="line">        :!./%</span><br><span class="line">    endif</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">&quot;C,C++的调试</span><br><span class="line">map &lt;F8&gt; :call Rungdb()&lt;CR&gt;</span><br><span class="line">func! Rungdb()</span><br><span class="line">    exec &quot;w&quot;</span><br><span class="line">    exec &quot;!g++ % -g -o %&lt;&quot;</span><br><span class="line">    exec &quot;!gdb ./%&lt;&quot;</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot;&quot;实用设置</span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&quot; 设置当文件被改动时自动载入</span><br><span class="line">set autoread</span><br><span class="line"></span><br><span class="line">&quot; quickfix模式</span><br><span class="line">autocmd FileType c,cpp map &lt;buffer&gt; &lt;leader&gt;&lt;space&gt; :w&lt;cr&gt;:make&lt;cr&gt;</span><br><span class="line"></span><br><span class="line">&quot;代码补全 </span><br><span class="line">set completeopt=preview,menu </span><br><span class="line"></span><br><span class="line">&quot;允许插件  </span><br><span class="line">filetype plugin on</span><br><span class="line"></span><br><span class="line">&quot;共享剪贴板  </span><br><span class="line">set clipboard+=unnamed </span><br><span class="line"></span><br><span class="line">&quot;从不备份  </span><br><span class="line">set nobackup</span><br><span class="line"></span><br><span class="line">&quot;make 运行</span><br><span class="line">:set makeprg=g++\ -Wall\ \ %</span><br><span class="line"></span><br><span class="line">&quot;自动保存</span><br><span class="line">set autowrite</span><br><span class="line">set ruler                   &quot; 打开状态栏标尺</span><br><span class="line">set cursorline              &quot; 突出显示当前行</span><br><span class="line">set magic                   &quot; 设置魔术</span><br><span class="line">set guioptions-=T           &quot; 隐藏工具栏</span><br><span class="line">set guioptions-=m           &quot; 隐藏菜单栏</span><br><span class="line"></span><br><span class="line">&quot;set statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%&#123;&amp;fileformat&#125;\ %&#123;&amp;encoding&#125;\ %c:%l/%L%)\</span><br><span class="line">&quot; 设置在状态行显示的信息</span><br><span class="line">set foldcolumn=0</span><br><span class="line">set foldmethod=indent </span><br><span class="line">set foldlevel=3 </span><br><span class="line">set foldenable              &quot; 开始折叠</span><br><span class="line"></span><br><span class="line">&quot; 不要使用vi的键盘模式，而是vim自己的</span><br><span class="line">set nocompatible</span><br><span class="line"></span><br><span class="line">&quot; 语法高亮</span><br><span class="line">set syntax=on</span><br><span class="line"></span><br><span class="line">&quot; 去掉输入错误的提示声音</span><br><span class="line">set noeb</span><br><span class="line"></span><br><span class="line">&quot; 在处理未保存或只读文件的时候，弹出确认</span><br><span class="line">set confirm</span><br><span class="line"></span><br><span class="line">&quot; 自动缩进</span><br><span class="line">set autoindent</span><br><span class="line">set cindent</span><br><span class="line"></span><br><span class="line">&quot; Tab键的宽度</span><br><span class="line">set tabstop=4</span><br><span class="line"></span><br><span class="line">&quot; 统一缩进为4</span><br><span class="line">set softtabstop=4</span><br><span class="line">set shiftwidth=4</span><br><span class="line"></span><br><span class="line">&quot; 不要用空格代替制表符</span><br><span class="line">set noexpandtab</span><br><span class="line"></span><br><span class="line">&quot; 在行和段开始处使用制表符</span><br><span class="line">set smarttab</span><br><span class="line"></span><br><span class="line">&quot; 显示行号</span><br><span class="line">set number</span><br><span class="line"></span><br><span class="line">&quot; 历史记录数</span><br><span class="line">set history=1000</span><br><span class="line"></span><br><span class="line">&quot;禁止生成临时文件</span><br><span class="line">set nobackup</span><br><span class="line">set noswapfile</span><br><span class="line"></span><br><span class="line">&quot;搜索忽略大小写</span><br><span class="line">set ignorecase</span><br><span class="line"></span><br><span class="line">&quot;搜索逐字符高亮</span><br><span class="line">set hlsearch</span><br><span class="line">set incsearch</span><br><span class="line"></span><br><span class="line">&quot;行内替换</span><br><span class="line">set gdefault</span><br><span class="line"></span><br><span class="line">&quot;编码设置</span><br><span class="line">set enc=utf-8</span><br><span class="line">set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936</span><br><span class="line"></span><br><span class="line">&quot;语言设置</span><br><span class="line">set langmenu=zh_CN.UTF-8</span><br><span class="line">set helplang=cn</span><br><span class="line"></span><br><span class="line">&quot; 我的状态行显示的内容（包括文件类型和解码）</span><br><span class="line">&quot;set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;</span><br><span class="line">&quot;set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]</span><br><span class="line"></span><br><span class="line">&quot; 总是显示状态行</span><br><span class="line">set laststatus=2</span><br><span class="line"></span><br><span class="line">&quot; 命令行（在状态行下）的高度，默认为1，这里是2</span><br><span class="line">set cmdheight=2</span><br><span class="line"></span><br><span class="line">&quot; 侦测文件类型</span><br><span class="line">filetype on</span><br><span class="line"></span><br><span class="line">&quot; 载入文件类型插件</span><br><span class="line">filetype plugin on</span><br><span class="line"></span><br><span class="line">&quot; 为特定文件类型载入相关缩进文件</span><br><span class="line">filetype indent on</span><br><span class="line"></span><br><span class="line">&quot; 保存全局变量</span><br><span class="line">set viminfo+=!</span><br><span class="line"></span><br><span class="line">&quot; 带有如下符号的单词不要被换行分割</span><br><span class="line">set iskeyword+=_,$,@,%,#,-</span><br><span class="line"></span><br><span class="line">&quot; 字符间插入的像素行数目</span><br><span class="line">set linespace=0</span><br><span class="line"></span><br><span class="line">&quot; 增强模式中的命令行自动完成操作</span><br><span class="line">set wildmenu</span><br><span class="line"></span><br><span class="line">&quot; 使回格键（backspace）正常处理indent, eol, start等</span><br><span class="line">set backspace=2</span><br><span class="line"></span><br><span class="line">&quot; 允许backspace和光标键跨越行边界</span><br><span class="line">set whichwrap+=&lt;,&gt;,h,l</span><br><span class="line"></span><br><span class="line">&quot; 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）</span><br><span class="line">set mouse=a</span><br><span class="line">set selection=exclusive</span><br><span class="line">set selectmode=mouse,key</span><br><span class="line"></span><br><span class="line">&quot; 通过使用: commands命令，告诉我们文件的哪一行被改变过</span><br><span class="line">set report=0</span><br><span class="line"></span><br><span class="line">&quot; 在被分割的窗口间显示空白，便于阅读</span><br><span class="line">set fillchars=vert:\ ,stl:\ ,stlnc:\</span><br><span class="line"></span><br><span class="line">&quot; 高亮显示匹配的括号</span><br><span class="line">set showmatch</span><br><span class="line"></span><br><span class="line">&quot; 匹配括号高亮的时间（单位是十分之一秒）</span><br><span class="line">set matchtime=1</span><br><span class="line"></span><br><span class="line">&quot; 光标移动到buffer的顶部和底部时保持3行距离</span><br><span class="line">set scrolloff=3</span><br><span class="line"></span><br><span class="line">&quot; 为C程序提供自动缩进</span><br><span class="line">set smartindent</span><br><span class="line"></span><br><span class="line">&quot; 高亮显示普通txt文件（需要txt.vim脚本）</span><br><span class="line">au BufRead,BufNewFile *  setfiletype txt</span><br><span class="line"></span><br><span class="line">&quot;自动补全</span><br><span class="line">:inoremap ( ()&lt;ESC&gt;i</span><br><span class="line">:inoremap ) &lt;c-r&gt;=ClosePair(&#x27;)&#x27;)&lt;CR&gt;</span><br><span class="line">:inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;O</span><br><span class="line">:inoremap &#125; &lt;c-r&gt;=ClosePair(&#x27;&#125;&#x27;)&lt;CR&gt;</span><br><span class="line">:inoremap [ []&lt;ESC&gt;i</span><br><span class="line">:inoremap ] &lt;c-r&gt;=ClosePair(&#x27;]&#x27;)&lt;CR&gt;</span><br><span class="line">:inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span><br><span class="line">:inoremap &#x27; &#x27;&#x27;&lt;ESC&gt;i</span><br><span class="line"></span><br><span class="line">function! ClosePair(char)</span><br><span class="line">    if getline(&#x27;.&#x27;)[col(&#x27;.&#x27;) - 1] == a:char</span><br><span class="line">        return &quot;\&lt;Right&gt;&quot;</span><br><span class="line">    else</span><br><span class="line">        return a:char</span><br><span class="line">    endif</span><br><span class="line">endfunction</span><br><span class="line"></span><br><span class="line">filetype plugin indent on </span><br><span class="line">&quot;打开文件类型检测, 加了这句才可以用智能补全</span><br><span class="line">set completeopt=longest,menu</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot; CTags的设定  </span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">let Tlist_Sort_Type = &quot;name&quot;    &quot; 按照名称排序  </span><br><span class="line">let Tlist_Use_Right_Window = 1  &quot; 在右侧显示窗口  </span><br><span class="line">let Tlist_Compart_Format = 1    &quot; 压缩方式  </span><br><span class="line">let Tlist_Exist_OnlyWindow = 1  &quot; 如果只有一个buffer，kill窗口也kill掉buffer  </span><br><span class="line">let Tlist_File_Fold_Auto_Close = 0  &quot; 不要关闭其他文件的tags  </span><br><span class="line">let Tlist_Enable_Fold_Column = 0    &quot; 不要显示折叠树  </span><br><span class="line">autocmd FileType java set tags+=D:\tools\java\tags  </span><br><span class="line">&quot;autocmd FileType h,cpp,cc,c set tags+=D:\tools\cpp\tags  </span><br><span class="line">&quot;let Tlist_Show_One_File=1            &quot;不同时显示多个文件的tag，只显示当前文件的</span><br><span class="line">&quot;设置tags  </span><br><span class="line">set tags=tags  </span><br><span class="line">&quot;set autochdir </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot;其他东东</span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot;默认打开Taglist </span><br><span class="line">let Tlist_Auto_Open=1 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; </span><br><span class="line">&quot; Tag list (ctags) </span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; </span><br><span class="line">let Tlist_Ctags_Cmd = &#x27;/usr/bin/ctags&#x27; </span><br><span class="line">let Tlist_Show_One_File = 1 &quot;不同时显示多个文件的tag，只显示当前文件的 </span><br><span class="line">let Tlist_Exit_OnlyWindow = 1 &quot;如果taglist窗口是最后一个窗口，则退出vim </span><br><span class="line">let Tlist_Use_Right_Window = 1 &quot;在右侧窗口中显示taglist窗口</span><br><span class="line">&quot; minibufexpl插件的一般设置</span><br><span class="line">let g:miniBufExplMapWindowNavVim = 1</span><br><span class="line">let g:miniBufExplMapWindowNavArrows = 1</span><br><span class="line">let g:miniBufExplMapCTabSwitchBufs = 1 </span><br><span class="line">let g:miniBufExplModSelTarget = 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-2-窗口（实现窗口的亚克力效果）"><a href="#3-2-窗口（实现窗口的亚克力效果）" class="headerlink" title="3.2 窗口（实现窗口的亚克力效果）"></a>3.2 窗口（实现窗口的亚克力效果）</h5><p>打开终端执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install chrome-gnome-shell</span><br><span class="line">sudo apt install gnome-shell-extensions</span><br><span class="line">sudo apt install gnome-tweaks</span><br></pre></td></tr></table></figure><p>打开火狐浏览器，访问<a href="https://extensions.gnome.org/">https://extensions.gnome.org</a></p><p>点击下图标注位置，安装插件</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 023539.png)</p><p>continue</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 023612.png)</p><p>点击Add</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 023628.png)</p><p>点击Allow</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 023637.png)</p><p>搜索Blur mu Shell，进入</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 023711.png)</p><p>点进来后，如果安装成功，右上角会有个off，把它调为on开始安装，然后弹窗，点击install.</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 023734.png)</p><p>进入终端，键入以下命令，启动Blur my Shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gnome-extensions prefs blur-my-shell@aunetx</span><br></pre></td></tr></table></figure><p>点击Application，再点击Add，就可以选定窗口，然后将那个窗口毛玻璃化，如果出现无法选定的情况，把那个窗口拖着晃几下，多Add几次。</p><p>数值条那里可以设置虚化程度，数值越小越透明。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 025425.png)</p><p>按照下图点击，</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 025606.png)</p><p>回到之前网页，搜索并安装Dash to Panel插件</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 030912.png)</p><p>安装完成后来到桌面，你会发现原本的侧边栏，移到了下方。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 031003.png)</p><p>保存快照。</p><h5 id="3-3-终端"><a href="#3-3-终端" class="headerlink" title="3.3 终端"></a>3.3 终端</h5><p>必需字体下载（来自那位伟大的师傅的分享）</p><p><a href="https://pan.baidu.com/share/init?surl=cIiCmItu3hg6MUGn3YwN3w&pwd=yxxx">百度网盘（提取码&#x3D;&#x3D;yxxx）</a></p><p>下载完成后，复制进Ubuntu</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 031734.png)</p><p>依次双击，然后点击右上角的绿色的install，下载完成后它会变为灰色（三个字体都要下载）</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 031843.png)</p><p>打开终端，按照下图依次选择，</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 032101.png)</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 032339.png)</p><p>保存快照</p><p>打开终端，输入以下指令</p><p>zsh</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install zsh</span><br></pre></td></tr></table></figure><p>oh-my-zsh</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/</span><br><span class="line">sudo git clone https://github.com/robbyrussell/oh-my-zsh</span><br><span class="line">cd ~/oh-my-zsh/tools</span><br><span class="line">sudo sh install.sh</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>插件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install zsh-autosuggestions</span><br><span class="line">sudo apt install zsh-syntax-highlighting</span><br><span class="line">sudo mv /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh /usr/share/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh</span><br><span class="line">sudo mv /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh</span><br><span class="line">sudo cp -r /usr/share/zsh-autosuggestions ~/oh-my-zsh/custom/plugins</span><br><span class="line">sudo cp -r /usr/share/zsh-syntax-highlighting ~/oh-my-zsh/custom/plugins</span><br><span class="line">sudo git clone https://github.com/romkatv/powerlevel10k ~/oh-my-zsh/themes/powerlevel10k</span><br><span class="line">sudo vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>输入以下指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ZSH=&quot;$HOME/oh-my-zsh&quot;</span><br><span class="line">ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</span><br><span class="line">plugins=(git zsh-autosuggestions zsh-syntax-highlighting)</span><br><span class="line">source /usr/share/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh</span><br><span class="line">source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh</span><br><span class="line">source $ZSH/oh-my-zsh.sh</span><br></pre></td></tr></table></figure><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 033043.png)</p><p>wq 保存后退出。</p><p>终端输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 ~/.zshrc</span><br><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure><p>输入后重启</p><p>打开终端，就会有以下提示，这是终端的美化选择。</p><p>第一页问你能否看到钻石（diamond）图标吗？如果能看到键入y</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035050.png)</p><p>能看到，键入y</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035113.png)</p><p>能看到，键入y</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035133.png)</p><p>很紧凑，且没有符号被覆盖，键入y</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035208.png)</p><p>接下来就是图标的个性化设置了，自己怎么喜欢怎么来，</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035228.png)</p><p>选1</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035240.png)</p><p>行末是否显示时间。若显示，是十二小时制还是二十四小时制</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035301.png)</p><p>选择中部风格</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035332.png)</p><p>选择头部风格</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035351.png)</p><p>选择尾部风格</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035406.png)</p><p>选择是一行还是两行（输入的指令是和图标处在同一行，还是另起一行）</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035433.png)</p><p>紧凑在一起还是分开</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035444.png)</p><p>看个人爱好</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035500.png)</p><p>是否显示上一次输入的指令，选y</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035607.png)</p><p>选1</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035618.png)</p><p>选y ,完成安装</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035628.png)</p><p>终端输入指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><p>然后调整颜色</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035700.png)</p><p>两个数值分别设置为120 和 36</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035806.png)</p><p>按照下图依次点击，将颜色改为#FF00FF，这是终端的文本颜色</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 042307.png)</p><p>取消下面，然后勾选红框圈住的选项。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 035914.png)</p><p>关闭，然后重新打开终端。</p><p>到这里，你就已经拥有了个性化的终端。保存快照。</p><p>效果示例</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 040153.png)</p><h5 id="3-4-壁纸"><a href="#3-4-壁纸" class="headerlink" title="3.4 壁纸"></a>3.4 壁纸</h5><p>（我的壁纸设置很简单）</p><p>首先，把图片复制进 &#x2F;home&#x2F;picture 文件里面</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 043745.png)</p><p>回到桌面，右击，点击“change backgroung”</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 043722.png)</p><p>点击右上角Add，选择图片。</p><p>![](..&#x2F;..&#x2F;..&#x2F;..&#x2F;图片&#x2F;Screenshots&#x2F;屏幕截图 2024-11-25 043919.png)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习笔记</title>
      <link href="/2024/11/17/23-pwn-themaster-%E7%AC%AC%E4%BA%8C%E3%80%81%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/11/17/23-pwn-themaster-%E7%AC%AC%E4%BA%8C%E3%80%81%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.lanqiao.cn/courses/1">参考蓝桥杯官网教程</a></p><p>Linux终端</p><p>在使用LInux时，我们并不是直接与底层系统交互的，而是通过一个名为“Shell”的中间程序来完成的。除此以外，Linux系统还提供了一个模拟终端的程序“Terminal”（终端模拟器）。</p><p>终端本质上是对应着Linux上的&#x2F;dev&#x2F;tty设备，Linux的多用户登录就是通过不同的&#x2F;dev&#x2F;tty设备来完成的。Linux系统默认提供了6个纯命令行界面的“terminal”来让用户登录，通过<code>Ctrl + Alt + F1 ~ F6</code>来切换。如果想回到图形界面可以按下<code>Ctel + Alt + F7</code>。</p><h4 id="Shell-壳"><a href="#Shell-壳" class="headerlink" title="Shell(壳)"></a>Shell(壳)</h4><p>“壳”–“核”  ~~  “Shell”–“UNIX&#x2F;LInux内核”。</p><p><font style="color:#000000;background-color:#D9EAFC;">Shell是</font>指“提供给使用者使用界面”的<font style="background-color:#D9EAFC;">命令解释器</font>。（之所以被称作是Shell是因为它隐藏了操作系统的底层细节）</p><h4 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h4><h5 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h5><table><thead><tr><th align="center"><font style="color:#DF2A3F;">Ctrl + c</font></th><th align="center">强行终止当前程序</th><th></th></tr></thead><tbody><tr><td align="center"><font style="color:#DF2A3F;">Ctrl + d</font></td><td align="center">键盘输入结束或退出终端</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">Ctrl + s</font></td><td align="center">暂停当前程序，暂停后按任意键恢复运行</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">Ctrl + z</font></td><td align="center">将当前程序放到后台运行，恢复到前台的为命令<font style="color:#DF2A3F;">fg</font></td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">Ctrl + a</font></td><td align="center">将光标移至行头，相当于<font style="color:#DF2A3F;">Home</font>键</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">Ctrl + e</font></td><td align="center">将光标移至行末，相当于<font style="color:#DF2A3F;">End</font>键</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">Ctrl + k</font></td><td align="center">删除从光标所在位置到行末</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">Alt + Backspace</font></td><td align="center">向前删除一个单词</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">Shift + PgUp</font></td><td align="center">将终端显示向上滚动</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">Shift + PgDn</font></td><td align="center">将终端显示向下滚动</td><td></td></tr></tbody></table><h5 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h5><p>通配符主要有星号（*）和问号（？），其<font style="background-color:#D9EAFC;">用途是</font>为了<font style="background-color:#D9EAFC;">对字符串进行模糊匹配</font>。</p><p><font style="color:#DF2A3F;">**</font><u>在终端里面输入的通配符由Shell来处理，并不是由所涉及的命令语句来处理的，它只会出现在命令的“参数里”。</u></p><p>当Shell在“参数值”中遇到通配符时，Shell会将其当做路径或文件名在磁盘上搜寻可能得匹配；如果符合要求的匹配存在，则进行代换（路径拓展）；否则将该通配符作为一个普通的字符传递给“命令”。在通配符被处理后，Shell会先完成该命令的重组，然后继续处理重组后的命令，直至执行该命令。</p><p>常见通配符</p><table><thead><tr><th align="center"><font style="color:#DF2A3F;">*</font></th><th align="center">匹配 0 或多个字符<font style="color:#DF2A3F;">（也可以把 * 理解成“全部”的意思</font>）</th><th></th></tr></thead><tbody><tr><td align="center"><font style="color:#DF2A3F;">？</font></td><td align="center">匹配任意一个字符</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">[list]</font></td><td align="center">匹配 list中的任意单一字符</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">[^list]</font></td><td align="center">匹配 除list中的任意单一字符以外的字符</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">[c1-c2]</font></td><td align="center">匹配c1-c2中的任意单一字符。如：[0-9][a-z]</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">{string1,string2,….}</font></td><td align="center">匹配string1或string2其一字符串</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">{c1..c2}</font></td><td align="center">匹配c1-c2中全部字符 如下文例2中{1..10}</td><td></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> demo01.cpp demo02.txt</span><br><span class="line"><span class="built_in">ls</span> *.cpp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731845588952-b34abfe1-d03c-4f54-b25d-6bccd040c6bd.png"></p><p>例2：同时创建多个文件，可使用<code>&#123;1..n&#125;</code>来同时创建n个文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> love_&#123;1..10&#125;.txt</span><br><span class="line"><span class="built_in">ls</span> *.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731845811661-2fb760f3-45b3-40be-aebe-905ed13c9be7.png"></p><h5 id="man命令（Manual-pages的缩写）"><a href="#man命令（Manual-pages的缩写）" class="headerlink" title="man命令（Manual pages的缩写）"></a>man命令（Manual pages的缩写）</h5><p>3.3.1Manual pages 是 UNIX 或类 UNIX操作系统中在线软件文档的一种普遍形式，内容包括计算机程序（库和系统调用等）、正式的标准和惯例，甚至是抽象的概念。</p><p>3.3.2使用格式</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">man &lt;command_name&gt;</span><br></pre></td></tr></table></figure><p>手册通常被分为8个分区：</p><table><thead><tr><th align="center">1</th><th align="center">一般命令</th><th></th></tr></thead><tbody><tr><td align="center">2</td><td align="center">系统调用</td><td></td></tr><tr><td align="center">3</td><td align="center">库函数，（包含C标准函数库）</td><td></td></tr><tr><td align="center">4</td><td align="center">特殊文件（通常是&#x2F;dev 中的设备）和驱动程序</td><td></td></tr><tr><td align="center">5</td><td align="center">文件格式和约定</td><td></td></tr><tr><td align="center">6</td><td align="center">游戏和屏保</td><td></td></tr><tr><td align="center">7</td><td align="center">杂项</td><td></td></tr><tr><td align="center">8</td><td align="center">系统管理命令和守护进程</td><td></td></tr></tbody></table><h4 id="Linux用户管理"><a href="#Linux用户管理" class="headerlink" title="Linux用户管理"></a>Linux用户管理</h4><h5 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h5><p><code>&lt;font style=&quot;color:#DF2A3F;&quot;&gt;who am i&lt;/font&gt;</code><font style="color:#DF2A3F;">:用来查看打开当前伪终端的用户的用户名。（记录登录shell时的用户，你以什么用户登录就显示什么）</font></p><p><code>&lt;font style=&quot;color:#DF2A3F;&quot;&gt;whoami&lt;/font&gt;</code><font style="color:#DF2A3F;">：查看当前登录的用户的用户名（当前系统的有效用户）</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731847508663-8867349f-a533-42b1-8458-fb0c62a25649.png"></p><p>第一列便是相应的用户名了。而第二列的<code>pst/0</code>中<code>pst</code>表示伪终端、后面的数字便是伪终端的序号。使用&#x2F;dev&#x2F;tty7时每打开一个终端，就会产生一个伪终端。（说白了就是，在桌面右击打开的终端，都是伪终端，每次打开，都是在创建新的伪终端。）</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731847863755-06f86696-99ee-40d4-82cb-b1bb0510b1b7.png"></p><p>who命令的其它常用参数</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th><th></th></tr></thead><tbody><tr><td align="center"><font style="color:#DF2A3F;">-a（all）</font></td><td align="center">打印能打印的全部</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">-d(died)</font></td><td align="center">打印死掉的进程</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">-m</font></td><td align="center">同<code>am i</code>,<code>mom likes</code></td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">-q</font></td><td align="center">打印当前登录用户数及用户名</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">-u</font></td><td align="center">打印当前登录用户登录信息</td><td></td></tr><tr><td align="center"><font style="color:#DF2A3F;">-r(rank)</font></td><td align="center">打印运行等级</td><td></td></tr></tbody></table><h5 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h5><h6 id="在Linux系统中，root账户拥有整个系统至高无上的权限。"><a href="#在Linux系统中，root账户拥有整个系统至高无上的权限。" class="headerlink" title="在Linux系统中，root账户拥有整个系统至高无上的权限。"></a>在Linux系统中，<font style="color:#DF2A3F;">root</font>账户拥有整个系统至高无上的权限。</h6><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731848572958-697021b1-152f-4dd9-835b-8b2aec861ec4.png"></p><h6 id="sudo命令（Super-User-Do-）"><a href="#sudo命令（Super-User-Do-）" class="headerlink" title="sudo命令（Super User Do ）"></a>sudo命令（Super User Do ）</h6><p><code>&lt;u&gt;su &lt;user&gt;&lt;/u&gt;</code><u>:切换到用户user，执行时需要输入目标用户的密码</u></p><p><code>&lt;u&gt;su - &lt;user&gt;&lt;/u&gt;</code><u>:切换到目标用户，但是同时用户的环境变量和工作目录也会跟着改变成目标用户所对应的。</u></p><p><code>&lt;u&gt;sudo &lt;cmd&gt;&lt;/u&gt;</code><u>:可以以特权级别运行cmd命令，需要当前用户属于sudo组，且输入当前账户的密码。</u></p><p>例：1.创建一个叫 lilei的用户，键入以下指令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> adduser lilei//这个命令不仅可以添加用户到系统，</span><br><span class="line">                      //同时也默认 为新用户在/home目录下创建一个工作目录</span><br></pre></td></tr></table></figure><p>然后就是给 lilei 用户设置密码。然后就可以一路 enter 键直到创建用户结束。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731849347003-5cd1ca10-b573-4173-b76e-76c359ab5e1c.png"></p><p>依次键入以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su -l lilei//切换到 lilei 用户</span><br><span class="line"><span class="built_in">who</span> am i//查看登录shell用</span><br><span class="line"><span class="built_in">whoami</span>//查看当前用户</span><br><span class="line"><span class="built_in">pwd</span>//查看工作路径（Print Working Directory）</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731850327902-5fbe0886-d8fc-4a68-9229-3f112fce3f33.png"></p><p>(这里可以很明显地看出来<code>who am i</code>和<code>whoami</code>的区别)</p><p>2.用<code>exit</code>命令或快捷键<code>Ctrl + D</code>退出当前用户</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731850461785-db7b25e4-ac96-44f2-98a5-70a10c9aa890.png"></p><h5 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h5><h6 id=""><a href="#" class="headerlink" title=""></a></h6><p>Linux里面，每个用户都有一个归属（用户组），简单地说就是用户组是一组用户的集合。一个用户可以属于多个用户组。</p><h6 id="查看当前用户归属于那个用户组"><a href="#查看当前用户归属于那个用户组" class="headerlink" title="查看当前用户归属于那个用户组"></a>查看当前用户归属于那个用户组</h6><p>法一：使用 groups 命令查看<code>groups &lt;user&gt;</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">groups</span> lilei</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731851111034-ddb44676-43fa-45ee-bbad-ddb0bbd853ce.png"></p><p><font style="color:#DF2A3F;">冒号之前表示用户，冒号之后便是该用户所属用户组。每次新建用户，如果不指定用户组，系统会自动创建一个与用户名相同的用户组。</font></p><p>法二：查看&#x2F;etc&#x2F;group文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/group  | <span class="built_in">sort</span>// | <span class="built_in">sort</span>  表示将读取的文本进行一个字典排序再输出。</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731851473539-82d88bc3-fd0f-4f03-a04d-7697be3bd5e5.png"></p><p>但是，这样得到的内容太杂乱，不方便找到目标用户组。</p><p>可以使用 <font style="color:#DF2A3F;">grep </font>命令，过滤掉不需要的结果</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/group | grep -E <span class="string">&quot;lilei&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731851593771-ec406da0-0657-4eb9-ae0a-6c3635006880.png"></p><p>补：&#x2F;etc&#x2F;group文件格式说明</p><p>&#x2F;etc&#x2F;group 的内容包括 用户组（Group）、用户组口令 、GID（组ID）、及该用户组所包含的用户（User），每个用户组一条记录，格式如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">group_name : password : GID : user_list</span><br></pre></td></tr></table></figure><h6 id="将其他用户添加到-sudo-用户组"><a href="#将其他用户添加到-sudo-用户组" class="headerlink" title="将其他用户添加到 sudo 用户组"></a>将其他用户添加到 sudo 用户组</h6><p>默认情况下，新创建的用户是不具有 root 权限的，也不再sudo用户组，可以让其加入sudo用户组从而获得相应权限。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731852019780-a8815e76-2ced-44db-bebf-189b6309d59b.png"></p><p>使用 usermod 命令为用户添加用户组，<u>使用该命令必须具有root权限</u></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731852278068-51add412-c7fb-41b9-9209-64edc47e21a0.png"></p><h5 id="删除用户和用户组"><a href="#删除用户和用户组" class="headerlink" title="删除用户和用户组"></a>删除用户和用户组</h5><h6 id="使用deluser命令删除用户"><a href="#使用deluser命令删除用户" class="headerlink" title="使用deluser命令删除用户"></a>使用<code>deluser</code>命令删除用户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> deluser &lt;user_name&gt; --remove-home</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731852510325-cdc64c1b-1fca-45b8-824d-1c02e800001d.png"></p><p>使用<code>--remove-home</code>参数在删除用户时会一并将该用户的工作目录删除。如果不使用那么系统会自动在 &#x2F;home 目录为该用户保留工作目录</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1731852660651-b6636cb7-6dce-496e-9952-555822c51918.png"></p><h6 id="使用groupdel命令删除用户组。必须确保群组中不包含任何用户，才能将群组删除。"><a href="#使用groupdel命令删除用户组。必须确保群组中不包含任何用户，才能将群组删除。" class="headerlink" title="使用groupdel命令删除用户组。必须确保群组中不包含任何用户，才能将群组删除。"></a>使用<code>groupdel</code>命令删除用户组。必须确保群组中不包含任何用户，才能将群组删除。</h6>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>个人Blog搭建</title>
      <link href="/2024/11/01/23-pwn-themaster-%E4%B8%AA%E4%BA%BABlog%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/11/01/23-pwn-themaster-%E4%B8%AA%E4%BA%BABlog%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<hr><p>本次搭建过程，参考此B站视频</p><p><a href="about:blank">链接</a></p><h3 id="一、Nodejs-与-Git-下载与安装"><a href="#一、Nodejs-与-Git-下载与安装" class="headerlink" title="一、Nodejs 与 Git 下载与安装"></a>一、Nodejs 与 Git 下载与安装</h3><p><strong>1.Nodejs下载</strong></p><p>官网链接：<a href="https://nodejs.org/en/">nodejs官网</a> </p><p>（如果不想安装在自己的C盘，可以参考这篇修改nodejs缓存路径的文章：<a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">参考文章</a>）</p><p><strong>2.Git下载</strong></p><p>官网链接：<a href="https://git-scm.com/downloads">Git官网</a></p><p>一路默认点到底就行了。</p><p><strong><u><font style="color:#000000;">3.测试是否都安装成功</font></u></strong></p><p><font style="color:#000000;">管理员运行cmd，输入以下指令</font></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v </span><br><span class="line">npm -v （这个是node附带的）</span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><p>如果见到以下输出，那么说明安装没有问题。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1730377002063-dce00e00-d44a-4c6e-859b-08674d2d0fcc.png"></p><p>4.下载hexo</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="二、仓库的搭建"><a href="#二、仓库的搭建" class="headerlink" title="二、仓库的搭建"></a>二、仓库的搭建</h3><p>成功下载好工具后，接下来便可以着手搭建GitHub存储静态页面的仓库</p><p><strong>1.注册&#x2F;登录</strong><a href="https://github.com/">GitHub</a></p><p>点击Create a new repository进入新建仓库页面</p><p>仓库名输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名.github.io</span><br></pre></td></tr></table></figure><p>勾选Public</p><p>勾选Add a README file</p><p>点击Create创建</p><p><strong>2.生成SSH Keys</strong></p><p>进入任意文件夹，右键空白处然后点击Git bash here，输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1730379132240-7a966b49-70d4-42b3-b850-af41e2acda47.png"></p><p>然后进入C:&#x2F;用户&#x2F;Lenovo&#x2F;.ssh（我电脑上的路径是这样的，在生成密钥的时候，git bash 列表会有密钥路径的，可自行查找）</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1730433544124-a5f62f84-5537-48d0-b065-73a07ae00bfa.png"></p><p>用记事本打开id_rsa.pub，复制里面的全部代码</p><p>在GitHub中进入用户设置，</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1730379169481-c28912f2-40fd-4586-bb30-adc65839358a.png"></p><p>找到SSH Keys，新建SSH Keys，将刚才的代码粘贴到下方框框里，点击创建。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1730379373279-83bd5c84-3757-4358-abce-038ce8804341.png"></p><p>最后测试是否成功</p><p>在gitbash中输入</p><p><code>ssh -T git@github.com</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1730386303008-2d733e6b-4c1d-4088-9fca-75e7d2af2c5d.png"></p><h3 id="三、本地生成博客内容"><a href="#三、本地生成博客内容" class="headerlink" title="三、本地生成博客内容"></a>三、本地生成博客内容</h3><p>1.新建Blog文件夹，进入Blog文件夹，右击空白处然后点击Git bash Here，依次输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">hexo install</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>:::info<br><strong>第一步如果出现：command not find，试着输入npx hexo init</strong></p><p>:::</p><p>一切没问题的话，就可以复制生成的链接进入浏览器看到我们生成的本地服务器了。</p><p>回到命令行，输入Ctrl + c 结束进程。</p><h3 id="四、上线Blog"><a href="#四、上线Blog" class="headerlink" title="四、上线Blog"></a>四、上线Blog</h3><p>1.进入Blog根目录文件，打开_config.yml文件</p><p>拉到最下面将deploy：后面的全删掉，复制粘贴以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: git</span><br><span class="line">repository: </span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure><p>:::color4<br>一定要注意缩进格式，每一行前都有两个空格，每个冒号后也都有一个空格！！！</p><p>:::</p><pre><code>2.前往github之前生成的仓库页面，点code，复制https链接，将其复制到`repository: `后面</code></pre><p> 然后保存退出，<img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1730387181458-6c72989e-4d47-486c-a817-89bd61e876dd.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40792144/1730387201708-3f8208a8-1204-4db2-88c2-135262f3a419.png"></p><p>3.回到Blog文件夹，git bash，安装自动部署发布工具</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g(生成)</span><br><span class="line">hexo d(上传)</span><br></pre></td></tr></table></figure><p>:::color1<br>如果是第一次使用git的话需要配置</p><p>1.<code>git config --global user.email &quot;你的邮箱&quot;</code></p><p>2.<code>git config --global user.name &quot;你的名字&quot;</code></p><p>配置完后，再<code>hexo g</code>上传</p><p>（参考文章说会跳出来github登录界面，但不知道为什么我配置的时候没有跳出登录界面，但影响不大）</p><p>:::</p><p>4.这样，我们就成功把本地内容上传到github了，上传成功以后就算搭建好了！</p><p>可以自行前往对应网址查看(网址：<code>用户名.github.io</code>）</p><h3 id="五：网站资料的修改"><a href="#五：网站资料的修改" class="headerlink" title="五：网站资料的修改"></a>五：网站资料的修改</h3><p>我们的博克标题默认是hexo，整个页面是初始默认的。</p><p>我们只需打开Blog根目录下的_config.yml文件，</p><p>将#Site下面按自己的需求填上。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Site</span><br><span class="line">title: 标题</span><br><span class="line">subtitle: 副标题</span><br><span class="line">description: 描述</span><br><span class="line">keywords: 关键词</span><br><span class="line">author: 站主</span><br><span class="line">language: 语言（可以填写zh-CN）</span><br><span class="line">timezone: 时区（可以填写Asia/Shanghai）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后保存，打开git bash 生成、上传。</p><h3 id="Congratulations！！"><a href="#Congratulations！！" class="headerlink" title="Congratulations！！!"></a><font style="color:#ED740C;">Congratulations！！!</font></h3><h3 id="至此，我们已经成功搭建好基本的博客了，剩下的就是对博客的优化和个性化了"><a href="#至此，我们已经成功搭建好基本的博客了，剩下的就是对博客的优化和个性化了" class="headerlink" title="至此，我们已经成功搭建好基本的博客了，剩下的就是对博客的优化和个性化了:)"></a><font style="color:#ED740C;">至此，我们已经成功搭建好基本的博客了，剩下的就是对博客的优化和个性化了:)</font></h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/10/31/hello-world/"/>
      <url>/2024/10/31/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
